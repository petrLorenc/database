services:
  # Mock OpenAI API service
  mock-openai:
    build:
      context: .
      dockerfile: ./local-dev/mock-openai/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080

  # Minio (S3 replacement)
  minio:
    image: minio/minio
    ports:
      - "9990:9000"
      - "9991:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # Minio setup service (creates buckets and loads sample data)
  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9990 minioadmin minioadmin;
      /usr/bin/mc mb myminio/activities;
      /usr/bin/mc cp /data/activities.json myminio/activities/;
      exit 0;
      "
    volumes:
      - ./data:/data

  # Backend local server
  backend:
    build:
      context: .
      dockerfile: ./backend/local-dev/Dockerfile
    ports:
      - "5550:5000"
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
      - ./pyproject.toml:/app/pyproject.toml
    environment:
      - FLASK_APP=backend/local-dev/app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - OPENAI_API_URL=http://mock-openai:8080/v1
      - OPENAI_API_KEY=dummy-key
      - ACTIVITIES_BUCKET_NAME=activities
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9990
      - AWS_REGION=us-east-1
    depends_on:
      - mock-openai
      - minio
      - minio-setup

  # Frontend development server
  frontend:
    build:
      context: ./frontend
      dockerfile: ./local-dev/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:5550/api
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  minio_data: